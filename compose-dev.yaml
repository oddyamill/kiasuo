services:
  telegram:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - TARGETAPP=telegram
    restart: no
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=kiasuo
      - POSTGRES_USER=kiasuo
      - POSTGRES_PASSWORD=kiasuo
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
  discord:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - TARGETAPP=discord
    restart: no
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=kiasuo
      - POSTGRES_USER=kiasuo
      - POSTGRES_PASSWORD=kiasuo
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    user: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=kiasuo
      - POSTGRES_USER=kiasuo
      - POSTGRES_PASSWORD=kiasuo
    env_file:
      - .env
    expose:
      - 5432
    ports:
      - 127.0.0.1:5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "kiasuo", "-U", "kiasuo"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  postgres-data:
