name: Worker CI

on:
  push:
    branches: [master]
    paths:
      - "**/*.ts"
      - "**/*.json"
      - "**/*.vue"
      - "**/*.css"
      - index.html
      - cloudflare.tf
      - wrangler.jsonc
      - .github/workflows/worker.yml
  pull_request:
    branches: [master]
    paths:
      - "**/*.ts"
      - "**/*.json"
      - "**/*.vue"
      - "**/*.css"
      - index.html
      - wrangler.jsonc
      - .github/workflows/worker.yml

jobs:
  # deploy:
  #   name: Deploy
  #   runs-on: ubuntu-latest
  #   if: github.event_name != 'pull_request'
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v5
  #     - name: Deploy
  #       uses: cloudflare/wrangler-action@v3
  #       with:
  #         apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  #         accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  #         secrets: |
  #           EDGE
  #           AUTH
  #           ZONE
  #           CLOUDFLARE
  #       env:
  #         EDGE: ${{ vars.CLOUDFLARE_WORKER_EDGE }}
  #         ZONE: ${{ vars.CLOUDFLARE_ZONE_ID }}
  #         CLOUDFLARE: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  #         AUTH: ${{ secrets.CLOUDFLARE_WORKER_AUTH }}
  deploy-dns:
    name: Deploy Cloudflare DNS
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v5
        with:
          sparse-checkout: "**/*.tf"
          sparse-checkout-cone-mode: false
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Init
        run: terraform init
      - name: Plan and deploy
        run: terraform apply --auto-approve
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          TF_VAR_cloudflare_zone_id: ${{ vars.CLOUDFLARE_ZONE_ID }}
